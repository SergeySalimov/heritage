$spacer: 1rem !default;

$spacers: (
  0: 0,
  1: $spacer * 0.25,
  2: $spacer * 0.5,
  3: $spacer,
  4: $spacer * 1.5,
  5: $spacer * 3,
  auto: auto,
) !default;

// name registration to use it on template
.m-0, .m-1, .m-2, .m-3, .m-4, .m-5, .m-auto,
.mt-0, .mt-1, .mt-2, .mt-3, .mt-4, .mt-5, .mt-auto,
.mb-0, .mb-1, .mb-2, .mb-3, .mb-4, .mb-5, .mb-auto,
.ml-0, .ml-1, .ml-2, .ml-3, .ml-4, .ml-5, .ml-auto,
.mr-0, .mr-1, .mr-2, .mr-3, .mr-4, .mr-5, .mr-auto,
.mx-0, .mx-1, .mx-2, .mx-3, .mx-4, .mx-5, .mx-auto,
.my-0, .my-1, .my-2, .my-3, .my-4, .my-5, .my-auto,
.p-0, .p-1, .p-2, .p-3, .p-4, .p-5,
.pt-0, .pt-1, .pt-2, .pt-3, .pt-4, .pt-5,
.pb-0, .pb-1, .pb-2, .pb-3, .pb-4, .pb-5,
.pl-0, .pl-1, .pl-2, .pl-3, .pl-4, .pl-5,
.pr-0, .pr-1, .pr-2, .pr-3, .pr-4, .pr-5,
.px-0, .px-1, .px-2, .px-3, .px-4, .px-5,
.py-0, .py-1, .py-2, .py-3, .py-4, .py-5 {}

// generate m-0 to m-5 and m-auto
// generate p-0 to p-5
@each $key, $value in $spacers {
  // generate m-* classes
  .m-#{$key} {
    margin: #{$value} !important;
  }

  // generate p-* classes excluding key = auto
  @if $key != auto {
    .p-#{$key} {
      padding: #{$value} !important;
    }
  }
}

// generate mt-0, mb-0, ml-0, mr-0 to mt-5, mb-5, ml-5, mr-5 and mt-auto, mb-auto, ml-auto, mr-auto
// generate pt-0, pb-0, pl-0, pr-0 to pt-5, pb-5, pl-5, pr-5
$sides: (top, bottom, left, right);

@each $key, $value in $spacers {
  @each $side in $sides {
    // generate m* classes
    .m#{str-slice($side, 0, 1)}-#{$key} {
      margin-#{$side}: #{$value} !important;
    }

    // generate p* classes excluding key = auto
    @if $key != auto {
      .p#{str-slice($side, 0, 1)}-#{$key} {
        padding-#{$side}: #{$value} !important;
      }
    }
  }
}

// generate mx-0 to mx-5 and my-0 to my-5 and mx-auto, my-auto
// generate px-0 to px-5 and py-0 to my-5
$axises: (x, y);

@each $key, $value in $spacers {
  @each $axis in $axises {
    @if $axis == x {
      // generate classes for x axis

      // generate mx-* classes
      .m#{$axis}-#{$key} {
        margin-left: #{$value} !important;
        margin-right: #{$value} !important;
      }

      // generate px-* classes excluding key = auto
      @if $key != auto {
        .p#{$axis}-#{$key} {
          padding-left: #{$value} !important;
          padding-right: #{$value} !important;
        }
      }
    } @else if $axis == y {
      // generate classes for y axis

      // generate my-* classes
      .m#{$axis}-#{$key} {
        margin-top: #{$value} !important;
        margin-bottom: #{$value} !important;
      }

      // generate py-* classes excluding key = auto
      @if $key != auto {
        .p#{$axis}-#{$key} {
          padding-top: #{$value} !important;
          padding-bottom: #{$value} !important;
        }
      }
    } @else {
      @error "Unknown axis #{$axis}.";
    }
  }
}
